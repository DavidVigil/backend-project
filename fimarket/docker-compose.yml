services:
  app:
    container_name: frontend
    build:
      dockerfile: Dockerfile-front
    restart: always
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:3000"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 5s
    user: "fimarket"
  back:
    container_name: backend
    build:
      dockerfile: Dockerfile-back
    restart: always
    ports:
      - "5000:5000"
    environment:
      FLASK_APP: app.py 
      FLASK_ENV: production 
      MONGODB_USER: fimarket 
      MONGODB_PASS: awesomefimarketpass123
      MONGODB_HOST: database
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:5000"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 5s
  database:
    container_name: database
    build:
      dockerfile: Dockerfile-mongo
    restart: always
    ports: 
      - "27017:27017" 
    environment: 
      MONGO_INITDB_ROOT_USERNAME: fimarket
      MONGO_INITDB_ROOT_PASSWORD: awesomefimarketpass123
    volumes:
      - ./opt/mongodb_data:/data/db
    healthcheck: 
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"] 
      interval: 30s 
      timeout: 10s 
      retries: 3 
      start_period: 5s

volumes:
  mongodb_data:
